<launch>

    <!-- Set arguments -->
    <arg name="use_gazebo" default="true" />

    <!-- Gazebo simulation -->
    <group if="$(arg use_gazebo)">
        <!-- Load Gazebo world -->
        <include file="$(find rosbot_gazebo)/launch/maze_world.launch">
            <arg name="paused" value="false" />
            <arg name="use_sim_time" value="true" />
        </include>

        <!-- Spawn your two-wheeled robot -->
        <param name="robot_description" textfile="$(find slam_pkg)/urdf/explorer_bot.urdf" />
        
        <node pkg="gazebo_ros" type="spawn_model" name="spawn_robot" output="screen" args="-urdf -param robot_description -model explorer_bot" />
    </group>

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
    </node>

    <!-- Transform Broadcaster -->
    <node pkg="slam_pkg" type="driver_controller" name="driver_controller" output="screen" />

    <!-- Gmapping SLAM -->
    <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping">
        <param name="base_frame" value="base_link" />
        <param name="odom_frame" value="odom" />
        <param name="map_update_interval" value="5.0" />
        <param name="delta" value="0.1" />
    </node>

    <!-- Move Base -->
    <node pkg="move_base" type="move_base" name="move_base" output="screen">
        <param name="base_global_planner" value="navfn/NavfnROS" />
        <param name="controller_frequency" value="10.0" />
        <rosparam file="$(find slam_pkg)/src/nav/costmap_common_params.yaml" command="load" />
        <rosparam file="$(find slam_pkg)/src/nav/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find slam_pkg)/src/nav/global_costmap_params.yaml" command="load" />
        <rosparam file="$(find slam_pkg)/src/nav/trajectory_planner.yaml" command="load" />
    </node>

    <!-- RViz for visualization -->
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find slam_pkg)/rviz/slam_navigation.rviz" />

    <!-- Teleoperation for manual control -->
    <node pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" name="teleop_twist_keyboard" output="screen" />

</launch>

